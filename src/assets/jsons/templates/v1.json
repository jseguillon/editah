[ { "name": "üìö v1.Pod init containers", "content": "---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: init-demo\nspec:\n  containers:\n  - name: nginx\n    image: nginx\n    ports:\n    - containerPort: 80\n    volumeMounts:\n    - name: workdir\n      mountPath: /usr/share/nginx/html\n  # These containers are run during pod initialization\n  initContainers:\n  - name: install\n    image: busybox\n    command:\n    - wget\n    - \"-O\"\n    - \"/work-dir/index.html\"\n    - http://info.cern.ch\n    volumeMounts:\n    - name: workdir\n      mountPath: \"/work-dir\"\n  dnsPolicy: Default\n  volumes:\n  - name: workdir\n    emptyDir: {}\n" } ,
  { "name": "üìö v1.Pod configmap - env var valueFrom", "join_with": ["configmap1"], "content": "---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: dapi-test-pod\nspec:\n  containers:\n    - name: test-container\n      image: k8s.gcr.io/busybox\n      command: [ \"/bin/echo\", \"$(SPECIAL_LEVEL_KEY) $(SPECIAL_TYPE_KEY)\" ]\n      env:\n        - name: SPECIAL_LEVEL_KEY\n          valueFrom:\n            configMapKeyRef:\n              name: special-config\n              key: SPECIAL_LEVEL\n        - name: SPECIAL_TYPE_KEY\n          valueFrom:\n            configMapKeyRef:\n              name: special-config\n              key: SPECIAL_TYPE\n  restartPolicy: Never\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: special-config\n  namespace: default\ndata:\n  special.how: very\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: env-config\n  namespace: default\ndata:\n  log_level: INFO" } ,
  { "name": "üìö v1.Pod lifecycle - preStart & postStart", "content": "---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: lifecycle-demo\nspec:\n  containers:\n  - name: lifecycle-demo-container\n    image: nginx\n    lifecycle:\n      postStart:\n        exec:\n          command: [\"/bin/sh\", \"-c\", \"echo Hello from the postStart handler > /usr/share/message\"]\n      preStop:\n        exec:\n          command: [\"/bin/sh\",\"-c\",\"nginx -s quit; while killall -0 nginx; do sleep 1; done\"]\n" } ,
  { "name": "üìö v1.Pod scheduling - affinities prefered & required", "content": "---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\nspec:\n  affinity:\n    nodeAffinity:\n      preferredDuringSchedulingIgnoredDuringExecution:\n      - weight: 1\n        preference:\n          matchExpressions:\n          - key: disktype\n            operator: In\n            values:\n            - ssd          \n  containers:\n  - name: nginx\n    image: nginx\n    imagePullPolicy: IfNotPresent\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\nspec:\n  affinity:\n    nodeAffinity:\n      requiredDuringSchedulingIgnoredDuringExecution:\n        nodeSelectorTerms:\n        - matchExpressions:\n          - key: disktype\n            operator: In\n            values:\n            - ssd            \n  containers:\n  - name: nginx\n    image: nginx\n    imagePullPolicy: IfNotPresent\n" } ,
  { "name": "üìö v1.Pod scheduling - attach to node name", "content": "---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\nspec:\n  # schedule pod to specific node\n  nodeName: foo-node\n  containers:\n  - name: nginx\n    image: nginx\n    imagePullPolicy: IfNotPresent" } ,
  { "name": "üç™ v1.Pod wait forever", "content": "---\n#TODOs : copy paste Linux and Win (shortcuts + buttons) + change name/ change namespace (shortcuts + monaco right click) \napiVersion: v1\nkind: Pod\nmetadata:\n  namespace: default\n  name: myname\nspec:\n  containers:\n  - name: busybox\n    image: busybox:latest\n    command: [ '/bin/bash', '-c', '--' ]\n    args: [ 'while true; do sleep 30; done;' ]\n" }
]
