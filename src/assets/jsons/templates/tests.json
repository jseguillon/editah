[ { "name": "ðŸ“š v1.Pod test usual", "content": "---\napiVersion: v1 \nkind: Pod \nmetadata: \n  creationTimestamp: '2021-03-18T09:48:45Z' \n  generateName: coredns-74ff55c5b- \n  labels: \n    k8s-app: kube-dns \n    pod-template-hash: 74ff55c5b \n  managedFields: \n  - apiVersion: v1 \n    fieldsType: FieldsV1 \n    fieldsV1: \n      f:metadata: \n        f:generateName: {} \n        f:labels: \n          .: {} \n          f:k8s-app: {} \n          f:pod-template-hash: {} \n        f:ownerReferences: \n          .: {} \n          k:{'uid':'1f629c8b-b2f1-40c5-88c2-587491cb37b2'}: \n            .: {} \n            f:apiVersion: {} \n            f:blockOwnerDeletion: {} \n            f:controller: {} \n            f:kind: {} \n            f:name: {} \n            f:uid: {} \n      f:spec: \n        f:containers: \n          k:{'name':'coredns'}: \n            .: {} \n            f:args: {} \n            f:image: {} \n            f:imagePullPolicy: {} \n            f:livenessProbe: \n              .: {} \n              f:failureThreshold: {} \n              f:httpGet: \n                .: {} \n                f:path: {} \n                f:port: {} \n                f:scheme: {} \n              f:initialDelaySeconds: {} \n              f:periodSeconds: {} \n              f:successThreshold: {} \n              f:timeoutSeconds: {} \n            f:name: {} \n            f:ports: \n              .: {} \n              k:{'containerPort':53,'protocol':'TCP'}: \n                .: {} \n                f:containerPort: {} \n                f:name: {} \n                f:protocol: {} \n              k:{'containerPort':53,'protocol':'UDP'}: \n                .: {} \n                f:containerPort: {} \n                f:name: {} \n                f:protocol: {} \n              k:{'containerPort':9153,'protocol':'TCP'}: \n                .: {} \n                f:containerPort: {} \n                f:name: {} \n                f:protocol: {} \n            f:readinessProbe: \n              .: {} \n              f:failureThreshold: {} \n              f:httpGet: \n                .: {} \n                f:path: {} \n                f:port: {} \n                f:scheme: {} \n              f:periodSeconds: {} \n              f:successThreshold: {} \n              f:timeoutSeconds: {} \n            f:resources: \n              .: {} \n              f:limits: \n                .: {} \n                f:memory: {} \n              f:requests: \n                .: {} \n                f:cpu: {} \n                f:memory: {} \n            f:securityContext: \n              .: {} \n              f:allowPrivilegeEscalation: {} \n              f:capabilities: \n                .: {} \n                f:add: {} \n                f:drop: {} \n              f:readOnlyRootFilesystem: {} \n            f:terminationMessagePath: {} \n            f:terminationMessagePolicy: {} \n            f:volumeMounts: \n              .: {} \n              k:{'mountPath':'/etc/coredns'}: \n                .: {} \n                f:mountPath: {} \n                f:name: {} \n                f:readOnly: {} \n        f:dnsPolicy: {} \n        f:enableServiceLinks: {} \n        f:nodeSelector: \n          .: {} \n          f:kubernetes.io/os: {} \n        f:priorityClassName: {} \n        f:restartPolicy: {} \n        f:schedulerName: {} \n        f:securityContext: {} \n        f:serviceAccount: {} \n        f:serviceAccountName: {} \n        f:terminationGracePeriodSeconds: {} \n        f:tolerations: {} \n        f:volumes: \n          .: {} \n          k:{'name':'config-volume'}: \n            .: {} \n            f:configMap: \n              .: {} \n              f:defaultMode: {} \n              f:items: {} \n              f:name: {} \n            f:name: {} \n    manager: kube-controller-manager \n    operation: Update \n    time: '2021-03-18T09:48:45Z' \n  - apiVersion: v1 \n    fieldsType: FieldsV1 \n    fieldsV1: \n      f:status: \n        f:conditions: \n          .: {} \n          k:{'type':'PodScheduled'}: \n            .: {} \n            f:lastProbeTime: {} \n            f:lastTransitionTime: {} \n            f:message: {} \n            f:reason: {} \n            f:status: {} \n            f:type: {} \n    manager: kube-scheduler \n    operation: Update \n    time: '2021-03-18T09:48:45Z' \n  - apiVersion: v1 \n    fieldsType: FieldsV1 \n    fieldsV1: \n      f:status: \n        f:conditions: \n          k:{'type':'ContainersReady'}: \n            .: {} \n            f:lastProbeTime: {} \n            f:lastTransitionTime: {} \n            f:status: {} \n            f:type: {} \n          k:{'type':'Initialized'}: \n            .: {} \n            f:lastProbeTime: {} \n            f:lastTransitionTime: {} \n            f:status: {} \n            f:type: {} \n          k:{'type':'Ready'}: \n            .: {} \n            f:lastProbeTime: {} \n            f:lastTransitionTime: {} \n            f:status: {} \n            f:type: {} \n        f:containerStatuses: {} \n        f:hostIP: {} \n        f:phase: {} \n        f:podIP: {} \n        f:podIPs: \n          .: {} \n          k:{'ip':'10.244.0.4'}: \n            .: {} \n            f:ip: {} \n        f:startTime: {} \n    manager: kubelet \n    operation: Update \n    time: '2021-03-18T09:49:22Z' \n  name: coredns-74ff55c5b-2bzgd \n  namespace: kube-system \n  ownerReferences: \n  - apiVersion: apps/v1 \n    blockOwnerDeletion: true \n    controller: true \n    kind: ReplicaSet \n    name: coredns-74ff55c5b \n    uid: 1f629c8b-b2f1-40c5-88c2-587491cb37b2 \n  resourceVersion: '572' \n  uid: d7975048-6338-4e0a-935b-5f941423c09c \nspec: \n  containers: \n  - args: \n    - -conf \n    - /etc/coredns/Corefile \n    image: k8s.gcr.io/coredns:1.7.0 \n    imagePullPolicy: IfNotPresent \n    livenessProbe: \n      failureThreshold: 5 \n      httpGet: \n        path: /health \n        port: 8080 \n        scheme: HTTP \n      initialDelaySeconds: 60 \n      periodSeconds: 10 \n      successThreshold: 1 \n      timeoutSeconds: 5 \n    name: coredns \n    ports: \n    - containerPort: 53 \n      name: dns \n      protocol: UDP \n    - containerPort: 53 \n      name: dns-tcp \n      protocol: TCP \n    - containerPort: 9153 \n      name: metrics \n      protocol: TCP \n    readinessProbe: \n      failureThreshold: 3 \n      httpGet: \n        path: /ready \n        port: 8181 \n        scheme: HTTP \n      periodSeconds: 10 \n      successThreshold: 1 \n      timeoutSeconds: 1 \n    resources: \n      limits: \n        memory: 170Mi \n      requests: \n        cpu: 100m \n        memory: 70Mi \n    securityContext: \n      allowPrivilegeEscalation: false \n      capabilities: \n        add: \n        - NET_BIND_SERVICE \n        drop: \n        - all \n      readOnlyRootFilesystem: true \n    terminationMessagePath: /dev/termination-log \n    terminationMessagePolicy: File \n    volumeMounts: \n    - mountPath: /etc/coredns \n      name: config-volume \n      readOnly: true \n    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount \n      name: coredns-token-pj8l9 \n      readOnly: true \n  dnsPolicy: Default \n  enableServiceLinks: true \n  nodeName: kind-control-plane \n  nodeSelector: \n    kubernetes.io/os: linux \n  preemptionPolicy: PreemptLowerPriority \n  priority: 2000000000 \n  priorityClassName: system-cluster-critical \n  restartPolicy: Always \n  schedulerName: default-scheduler \n  securityContext: {} \n  serviceAccount: coredns \n  serviceAccountName: coredns \n  terminationGracePeriodSeconds: 30 \n  tolerations: \n  - key: CriticalAddonsOnly \n    operator: Exists \n  - effect: NoSchedule \n    key: node-role.kubernetes.io/master \n  - effect: NoSchedule \n    key: node-role.kubernetes.io/control-plane \n  - effect: NoExecute \n    key: node.kubernetes.io/not-ready \n    operator: Exists \n    tolerationSeconds: 300 \n  - effect: NoExecute \n    key: node.kubernetes.io/unreachable \n    operator: Exists \n    tolerationSeconds: 300 \n  volumes: \n  - configMap: \n      defaultMode: 420 \n      items: \n      - key: Corefile \n        path: Corefile \n      name: coredns \n    name: config-volume \n  - name: coredns-token-pj8l9 \n    secret: \n      defaultMode: 420 \n      secretName: coredns-token-pj8l9 \nstatus: \n  conditions: \n  - lastProbeTime: null \n    lastTransitionTime: '2021-03-18T09:49:12Z' \n    status: 'True' \n    type: Initialized \n  - lastProbeTime: null \n    lastTransitionTime: '2021-03-18T09:49:22Z' \n    status: 'True' \n    type: Ready \n  - lastProbeTime: null \n    lastTransitionTime: '2021-03-18T09:49:22Z' \n    status: 'True' \n    type: ContainersReady \n  - lastProbeTime: null \n    lastTransitionTime: '2021-03-18T09:49:12Z' \n    status: 'True' \n    type: PodScheduled \n  containerStatuses: \n  - containerID: containerd://73d585b6a377667a240c6c47bca3bc7e6b4107d716b934a75a8a919e83aa7d49 \n    image: k8s.gcr.io/coredns:1.7.0 \n    imageID: sha256:bfe3a36ebd2528b454be6aebece806db5b40407b833e2af9617bf39afaff8c16 \n    lastState: {} \n    name: coredns \n    ready: true \n    restartCount: 0 \n    started: true \n    state: \n      running: \n        startedAt: '2021-03-18T09:49:13Z' \n  hostIP: 172.18.0.2 \n  phase: Running \n  podIP: 10.244.0.4 \n  podIPs: \n  - ip: 10.244.0.4 \n  qosClass: Burstable \n  startTime: '2021-03-18T09:49:12Z'" } ,
  { "name": "ðŸ“š apps/v1.Deploy test usual", "content": "---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  annotations:\n    deployment.kubernetes.io/revision: '1'\n  creationTimestamp: '2021-03-18T09:48:32Z'\n  generation: 1\n  labels:\n    k8s-app: kube-dns\n  managedFields:\n  - apiVersion: apps/v1\n    fieldsType: FieldsV1\n    fieldsV1:\n      f:metadata:\n        f:labels:\n          .: {}\n          f:k8s-app: {}\n      f:spec:\n        f:progressDeadlineSeconds: {}\n        f:replicas: {}\n        f:revisionHistoryLimit: {}\n        f:selector: {}\n        f:strategy:\n          f:rollingUpdate:\n            .: {}\n            f:maxSurge: {}\n            f:maxUnavailable: {}\n          f:type: {}\n        f:template:\n          f:metadata:\n            f:labels:\n              .: {}\n              f:k8s-app: {}\n          f:spec:\n            f:containers:\n              k:{'name':'coredns'}:\n                .: {}\n                f:args: {}\n                f:image: {}\n                f:imagePullPolicy: {}\n                f:livenessProbe:\n                  .: {}\n                  f:failureThreshold: {}\n                  f:httpGet:\n                    .: {}\n                    f:path: {}\n                    f:port: {}\n                    f:scheme: {}\n                  f:initialDelaySeconds: {}\n                  f:periodSeconds: {}\n                  f:successThreshold: {}\n                  f:timeoutSeconds: {}\n                f:name: {}\n                f:ports:\n                  .: {}\n                  k:{'containerPort':53,'protocol':'TCP'}:\n                    .: {}\n                    f:containerPort: {}\n                    f:name: {}\n                    f:protocol: {}\n                  k:{'containerPort':53,'protocol':'UDP'}:\n                    .: {}\n                    f:containerPort: {}\n                    f:name: {}\n                    f:protocol: {}\n                  k:{'containerPort':9153,'protocol':'TCP'}:\n                    .: {}\n                    f:containerPort: {}\n                    f:name: {}\n                    f:protocol: {}\n                f:readinessProbe:\n                  .: {}\n                  f:failureThreshold: {}\n                  f:httpGet:\n                    .: {}\n                    f:path: {}\n                    f:port: {}\n                    f:scheme: {}\n                  f:periodSeconds: {}\n                  f:successThreshold: {}\n                  f:timeoutSeconds: {}\n                f:resources:\n                  .: {}\n                  f:limits:\n                    .: {}\n                    f:memory: {}\n                  f:requests:\n                    .: {}\n                    f:cpu: {}\n                    f:memory: {}\n                f:securityContext:\n                  .: {}\n                  f:allowPrivilegeEscalation: {}\n                  f:capabilities:\n                    .: {}\n                    f:add: {}\n                    f:drop: {}\n                  f:readOnlyRootFilesystem: {}\n                f:terminationMessagePath: {}\n                f:terminationMessagePolicy: {}\n                f:volumeMounts:\n                  .: {}\n                  k:{'mountPath':'/etc/coredns'}:\n                    .: {}\n                    f:mountPath: {}\n                    f:name: {}\n                    f:readOnly: {}\n            f:dnsPolicy: {}\n            f:nodeSelector:\n              .: {}\n              f:kubernetes.io/os: {}\n            f:priorityClassName: {}\n            f:restartPolicy: {}\n            f:schedulerName: {}\n            f:securityContext: {}\n            f:serviceAccount: {}\n            f:serviceAccountName: {}\n            f:terminationGracePeriodSeconds: {}\n            f:tolerations: {}\n            f:volumes:\n              .: {}\n              k:{'name':'config-volume'}:\n                .: {}\n                f:configMap:\n                  .: {}\n                  f:defaultMode: {}\n                  f:items: {}\n                  f:name: {}\n                f:name: {}\n    manager: kubeadm\n    operation: Update\n    time: '2021-03-18T09:48:32Z'\n  - apiVersion: apps/v1\n    fieldsType: FieldsV1\n    fieldsV1:\n      f:metadata:\n        f:annotations:\n          .: {}\n          f:deployment.kubernetes.io/revision: {}\n      f:status:\n        f:availableReplicas: {}\n        f:conditions:\n          .: {}\n          k:{'type':'Available'}:\n            .: {}\n            f:lastTransitionTime: {}\n            f:lastUpdateTime: {}\n            f:message: {}\n            f:reason: {}\n            f:status: {}\n            f:type: {}\n          k:{'type':'Progressing'}:\n            .: {}\n            f:lastTransitionTime: {}\n            f:lastUpdateTime: {}\n            f:message: {}\n            f:reason: {}\n            f:status: {}\n            f:type: {}\n        f:observedGeneration: {}\n        f:readyReplicas: {}\n        f:replicas: {}\n        f:updatedReplicas: {}\n    manager: kube-controller-manager\n    operation: Update\n    time: '2021-03-18T09:49:23Z'\n  name: coredns\n  namespace: kube-system\n  resourceVersion: '585'\n  uid: 5e7241f8-61f0-45df-9108-ce21f80d0d42\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 2\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        k8s-app: kube-dns\n    spec:\n      containers:\n      - args:\n        - -conf\n        - /etc/coredns/Corefile\n        image: k8s.gcr.io/coredns:1.7.0\n        imagePullPolicy: IfNotPresent\n        livenessProbe:\n          failureThreshold: 5\n          httpGet:\n            path: /health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          periodSeconds: 10\n          successThreshold: 1\n          timeoutSeconds: 5\n        name: coredns\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        - containerPort: 9153\n          name: metrics\n          protocol: TCP\n        readinessProbe:\n          failureThreshold: 3\n          httpGet:\n            path: /ready\n            port: 8181\n            scheme: HTTP\n          periodSeconds: 10\n          successThreshold: 1\n          timeoutSeconds: 1\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            add:\n            - NET_BIND_SERVICE\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n        volumeMounts:\n        - mountPath: /etc/coredns\n          name: config-volume\n          readOnly: true\n      dnsPolicy: Default\n      nodeSelector:\n        kubernetes.io/os: linux\n      priorityClassName: system-cluster-critical\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      serviceAccount: coredns\n      serviceAccountName: coredns\n      terminationGracePeriodSeconds: 30\n      tolerations:\n      - key: CriticalAddonsOnly\n        operator: Exists\n      - effect: NoSchedule\n        key: node-role.kubernetes.io/master\n      - effect: NoSchedule\n        key: node-role.kubernetes.io/control-plane\n      volumes:\n      - configMap:\n          defaultMode: 420\n          items:\n          - key: Corefile\n            path: Corefile\n          name: coredns\n        name: config-volume\nstatus:\n  availableReplicas: 2\n  conditions:\n  - lastTransitionTime: '2021-03-18T09:49:22Z'\n    lastUpdateTime: '2021-03-18T09:49:22Z'\n    message: Deployment has minimum availability.\n    reason: MinimumReplicasAvailable\n    status: 'True'\n    type: Available\n  - lastTransitionTime: '2021-03-18T09:48:45Z'\n    lastUpdateTime: '2021-03-18T09:49:23Z'\n    message: ReplicaSet 'coredns-74ff55c5b' has successfully progressed.\n    reason: NewReplicaSetAvailable\n    status: 'True'\n    type: Progressing\n  observedGeneration: 1\n  readyReplicas: 2\n  replicas: 2\n  updatedReplicas: 2\n---\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    prometheus.io/port: '9153'\n    prometheus.io/scrape: 'true'\n  creationTimestamp: '2021-03-18T09:48:32Z'\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: 'true'\n    kubernetes.io/name: KubeDNS\n  managedFields:\n  - apiVersion: v1\n    fieldsType: FieldsV1\n    fieldsV1:\n      f:metadata:\n        f:annotations:\n          .: {}\n          f:prometheus.io/port: {}\n          f:prometheus.io/scrape: {}\n        f:labels:\n          .: {}\n          f:k8s-app: {}\n          f:kubernetes.io/cluster-service: {}\n          f:kubernetes.io/name: {}\n      f:spec:\n        f:clusterIP: {}\n        f:ports:\n          .: {}\n          k:{'port':53,'protocol':'TCP'}:\n            .: {}\n            f:name: {}\n            f:port: {}\n            f:protocol: {}\n            f:targetPort: {}\n          k:{'port':53,'protocol':'UDP'}:\n            .: {}\n            f:name: {}\n            f:port: {}\n            f:protocol: {}\n            f:targetPort: {}\n          k:{'port':9153,'protocol':'TCP'}:\n            .: {}\n            f:name: {}\n            f:port: {}\n            f:protocol: {}\n            f:targetPort: {}\n        f:selector:\n          .: {}\n          f:k8s-app: {}\n        f:sessionAffinity: {}\n        f:type: {}\n    manager: kubeadm\n    operation: Update\n    time: '2021-03-18T09:48:32Z'\n  name: kube-dns\n  namespace: kube-system\n  resourceVersion: '273'\n  uid: f37c43e7-e1c2-46a6-9a22-1041c8862364\nspec:\n  clusterIP: 10.96.0.10\n  clusterIPs:\n  - 10.96.0.10\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n    targetPort: 53\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n    targetPort: 53\n  - name: metrics\n    port: 9153\n    protocol: TCP\n    targetPort: 9153\n  selector:\n    k8s-app: kube-dns\n  sessionAffinity: None\n  type: ClusterIP\nstatus:\n  loadBalancer: {}" },
  { "name": "ðŸ“š v1.Unkown uknown", "content": "---\napiVersion: v1\nitems:\n- apiVersion: apps/v1\n  kind: Deployment\n "},
  { "name": "ðŸ“š v1.Secret usual", "content": "---\n#please base64 decode in command pannel \napiVersion: v1\ndata:\n  myapp.yaml: YXV0aF9lbmFibGVkOiBmYWxzZQpjaHVua19zdG9yZV9jb25maWc6CiAgbWF4X2xvb2tfYmFja19wZXJpb2Q6IDAKaW5nZXN0ZXI6CiAgY2h1bmtfYmxvY2tfc2l6ZTogMjYyMTQ0CiAgY2h1bmtfaWRsZV9wZXJpb2Q6IDNtCiAgY2h1bmtfcmV0YWluX3BlcmlvZDogMW0KICBsaWZlY3ljbGVyOgogICAgcmluZzoKICAgICAga3ZzdG9yZToKICAgICAgICBzdG9yZTogaW5tZW1vcnkKICAgICAgcmVwbGljYXRpb25fZmFjdG9yOiAxCiAgbWF4X3RyYW5zZmVyX3JldHJpZXM6IDAKbGltaXRzX2NvbmZpZzoKICBlbmZvcmNlX21ldHJpY19uYW1lOiBmYWxzZQogIHJlamVjdF9vbGRfc2FtcGxlczogdHJ1ZQogIHJlamVjdF9vbGRfc2FtcGxlc19tYXhfYWdlOiAxNjhoCnNjaGVtYV9jb25maWc6CiAgY29uZmlnczoKICAtIGZyb206ICIyMDE4LTA0LTE1IgogICAgaW5kZXg6CiAgICAgIHBlcmlvZDogMTY4aAogICAgICBwcmVmaXg6IGluZGV4XwogICAgb2JqZWN0X3N0b3JlOiBmaWxlc3lzdGVtCiAgICBzY2hlbWE6IHY5CiAgICBzdG9yZTogYm9sdGRiCnNlcnZlcjoKICBodHRwX2xpc3Rlbl9wb3J0OiAzMTAwCnN0b3JhZ2VfY29uZmlnOgogIGJvbHRkYjoKICAgIGRpcmVjdG9yeTogL2RhdGEvbG9raS9pbmRleAogIGZpbGVzeXN0ZW06CiAgICBkaXJlY3Rvcnk6IC9kYXRhL2xva2kvY2h1bmtzCnRhYmxlX21hbmFnZXI6CiAgcmV0ZW50aW9uX2RlbGV0ZXNfZW5hYmxlZDogZmFsc2UKICByZXRlbnRpb25fcGVyaW9kOiAw\nkind: Secret\nmetadata:\n  annotations:\n    meta.helm.sh/release-name: myapp-stack\n    meta.helm.sh/release-namespace: myapp-stack\n  creationTimestamp: '2021-03-18T09:49:18Z'\n  labels:\n    app: myapp\n    app.kubernetes.io/managed-by: Helm\n    chart: myapp-0.25.1\n    heritage: Helm\n    release: myapp-stack\n  managedFields:\n  - apiVersion: v1\n    fieldsType: FieldsV1\n    fieldsV1:\n      f:data:\n        .: {}\n        f:myapp.yaml: {}\n      f:metadata:\n        f:annotations:\n          .: {}\n          f:meta.helm.sh/release-name: {}\n          f:meta.helm.sh/release-namespace: {}\n        f:labels:\n          .: {}\n          f:app: {}\n          f:app.kubernetes.io/managed-by: {}\n          f:chart: {}\n          f:heritage: {}\n          f:release: {}\n      f:type: {}\n    manager: Go-http-client\n    operation: Update\n    time: '2021-03-18T09:49:18Z'\n  name: myapp-stack\n  namespace: myapp-stack\n  resourceVersion: '3757'\n  selfLink: /api/v1/namespaces/myapp-stack/secrets/myapp-stack\n  uid: 0ae833e5-3bb2-4bf2-9e47-aabc019d9e4f\ntype: Opaque"}
]
